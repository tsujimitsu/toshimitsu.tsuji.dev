<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on tsujimitsu.tsuji.dev</title>
    <link>https://toshimitsu.tsuji.dev/categories/tech/</link>
    <description>Recent content in tech on tsujimitsu.tsuji.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 16 Nov 2019 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://toshimitsu.tsuji.dev/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test JS</title>
      <link>https://toshimitsu.tsuji.dev/posts/test-js/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/test-js/</guid>
      <description> test-js jest  JavaScript テスティングフレームワーク jest でテストカバレッジを見る この頃流行りの Jest を導入して軽快に JS をテストしよう  </description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://toshimitsu.tsuji.dev/posts/2017-10-14-nodejs/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/2017-10-14-nodejs/</guid>
      <description>Feature  Non-Blocking(Asynchronous and Event Driven)  callback, parallel disk access これまでの言語はWebサーバをマルチスレッドで動かすことで大量アクセスを捌いていた マルチスレッドといってもスレッド数には限界があった(C10K問題) Node.jsはcallback呼び出しによりI/Oによるブロッキングを受けないようにしシングルスレッドで大量アクセスを捌けるようにした JavaScriptのAjaxをサーバ側にも拡張している  Event Loop  callback関数の呼び出しをリッスンして待つ  V8 JavaScript Engine(Google Chrome) is very fast  NPM  Node Package Manager(online repositories)
$ npm install (install all the modules in package.json) $ npm install --save (add the module dependency to package.json) $ npm install &amp;lt;Module Name&amp;gt; $ npm install &amp;lt;Module Name&amp;gt; -g (dependency globally)   File System  File I/O require(&amp;ldquo;fs&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>hugo</title>
      <link>https://toshimitsu.tsuji.dev/posts/hugo/</link>
      <pubDate>Tue, 29 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/hugo/</guid>
      <description>Go  Download
# cd ~ # wget https://storage.googleapis.com/golang/go1.9.linux-amd64.tar.gz # ls -l go* -rw-r--r--. 1 root root 102601309 Aug 25 07:44 go1.9.linux-amd64.tar.gz  Install
# tar -C /usr/local -xzf go1.9.linux-amd64.tar.gz # ls -ld /usr/local/go/ drwxr-xr-x. 11 root root 265 Aug 25 06:51 /usr/local/go/ # vi ~/.bash_profile PATH=$PATH:$HOME/bin:/usr/local/go/bin # source ~/.bash_profile # go version go version go1.9 linux/amd64  Test
# vi hello.go package main import &amp;quot;fmt&amp;quot; func main() { fmt.</description>
    </item>
    
  </channel>
</rss>