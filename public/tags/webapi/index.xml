<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webapi on tsuji.dev</title>
    <link>https://toshimitsu.tsuji.dev/tags/webapi/</link>
    <description>Recent content in webapi on tsuji.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 04 Oct 2015 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://toshimitsu.tsuji.dev/tags/webapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jalan WebAPI</title>
      <link>https://toshimitsu.tsuji.dev/posts/jalan-webapi/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/jalan-webapi/</guid>
      <description> じゃらんWebサービスとは  じゃらんnetが提供する宿泊宿、空室検索用WebAPI  API の種類  じゃらん宿表示API（アドバンス） じゃらん宿表示API（ライト） 空室検索API エリア検索API 温泉検索API  APIの制限  特定IPアドレスからの一定時間内での連続アクセスは制限される。（制限条件は非公開）  API の取得  以下のページからアカウント登録することでAPI-KEYがメール送付される。 https://www.jalan.net/jw/jwp0400/jww0401.do  API の利用例  リクエストURL: http://jws.jalan.net/APILite/HotelSearch/V1/? key: API-KEY pref: 都道府県に割り当てられたコード http://jws.jalan.net/APILite/HotelSearch/V1/?key=XXXXXX&amp;amp;pref=270000 結果は XML 形式で返却される。API利用制限等のエラー時はエラーXMLが返却される。
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt; &amp;lt;Error xmlns=&amp;quot;jws&amp;quot;&amp;gt; &amp;lt;Message&amp;gt;アクセスが拒否されました。&amp;lt;/Message&amp;gt; &amp;lt;/Error&amp;gt;   jalan のエリア横断検索  jalan のWeb検索には複数エリアをまたいでの検索機能がなかったのでAPIで実装。 jalan 横断検索  コメント  都道府県をキーにした検索ができない点が不便。検索結果が多くなるから？ APIの利用制限が厳しい。一定期間連続アクセスがあると遮断（HTTP 406が返却される）されるとあるが、2分に一回の間隔でもNGになるため使いづらい。  reference  じゃらんWebサービス じゃらんWebサービス エリアコード じゃらんAPIを使ってさまざまな条件から日本中の宿と温泉を検索してみよう  </description>
    </item>
    
    <item>
      <title>Welcom to WebAPI World</title>
      <link>https://toshimitsu.tsuji.dev/posts/welcome-to-webapi-world/</link>
      <pubDate>Fri, 05 Dec 2014 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/welcome-to-webapi-world/</guid>
      <description>Introduction  本記事はHZ Colloquium Advent Calendar 2014の12/5分の記事です。 今日は過激に適当な話も入れながら WebAPI について書いていく。 なお、お仕事で課題を見事に解決できず、明日死亡フラグがたっているなかでの執筆なため 全体的にテンションはおかしめ。 Atom + middleman にて配信中。やっと静的サイトジェネレータの良さがわかってきたころあい。  Welcome to WebAPI World 　これを書きながら Web2.0, Mashup などの言葉を思い出す（だいぶ昔の話なのか）。 それらを構成する要素にWebAPIってやつもあった。API (Application Programming Interface)です。 Webの技術をベースにしたAPIです。Webの技術ってなんでしょうか。それはHTTP(HTTPS)やURIのことです。 プロトコルのことです。
ここで思考をもっていってほしくない方向は「HTML = Web」って考え方です。Webページとかの延長線上の話としては 捉えないほうがよいと思います。いったん忘れましょう。
WebAPIといってもいくつか宗教があります。SOAP, WSDL, REST, RESTfulなどがそれです。 今はREST, RESTfulが全盛です。SOAPやWSDLは仕様が複雑すぎてはやらなかったらしいです。 このあたりの歴史は「Webを支える技術」に書いてます。Web関係のエンジニアはあれを読むべき。 「Web」の捉え方が少し変わるから。
REST(ful) WebAPIとは REST(REpresentation State Transfer)の略です。アーキテクチャ（設計方法？設計原則？ととらえればよいのか） の名前です。RESTな方針に沿って設計されているシステムをRESTfulなシステムというらしい。 RESTを極めたものの証なのです。下記はRESTの特徴です。4つ書きます。もう少しあった気もします。
リソース 以下は全てリソースです。 * 大阪の天気 * 俺の明日の予定 * 飲み会の写真
リソースの識別子 全てのリソースは1つ以上の識別子を持ちます。「大阪の天気」だとこうなる。なるほど、識別子とか小難しいが RESTではURIでの指定になるんですね。
 http://weather.yahoo.co.jp/weather/jp/27/6200.html  ちなみに1つ以上と書いたのは、上記は以下のURIでも同様だから（以下は仮ね）。つまり、同じ情報でも 捉え方は複数あるよということ。そのためにリソース自体が複数識別子で参照されることがありえる。
 http://weather.yahoo.co.jp/weather/today/osaka.html  どうですか？なんだかセマンティックな話ですよね。セマンティックウェブ！です。ちょっと違うけどそそるでしょ？</description>
    </item>
    
  </channel>
</rss>