<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scala on tsuji.dev</title>
    <link>https://toshimitsu.tsuji.dev/tags/scala/</link>
    <description>Recent content in scala on tsuji.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 14 Aug 2015 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://toshimitsu.tsuji.dev/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scala Primer</title>
      <link>https://toshimitsu.tsuji.dev/posts/scala-primer/</link>
      <pubDate>Fri, 14 Aug 2015 00:00:00 +0900</pubDate>
      
      <guid>https://toshimitsu.tsuji.dev/posts/scala-primer/</guid>
      <description>Scalaのオブジェクト  シングルトンクラス = Scala のオブジェクト。 インスタンスのように複数作成はできない。  #コンパイル
 scalac HelloWorld.scala scala HelloWorld scalac -d classes HelloWorld.scala scala -cp classes HelloWorld  for構文  ジェネレータを用いる（eachのようなもの？）
for (n:Int &amp;lt;- Range(1,101)) total += n  for条件にフィルタをかけることができる
for (n:Int &amp;lt;- Range(1,101); if (n % 2 == 0)) total += n   メソッドと関数  Java同様にメソッドが存在する
object HelloWorld { def main(args: Array[String]) = { println(&amp;quot;Hello World&amp;quot;) } def pritest(s: String) = { println(s) } }  App trait を使うと main メソッドを省略できる</description>
    </item>
    
  </channel>
</rss>